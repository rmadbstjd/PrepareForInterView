SPA는 Single Page Application의 약자로, 즉 하나의 페이지로 이루어진 어플리케이션입니다.

1.필요한 모든리소스(html, css, javascript)를 최초에 한 번만 다운로드합니다.

2. SPA는 CSR 방식으로 렌더링을 합니다.

흔히 알고 있는 React, Vue, Angular 등으로 만들어진 웹 페이지가 여기에 속합니다.

장점

1.자연스러운 사용자 경험을 줄 수 있습니다.

전체 페이지를 업데이트할 필요가 없기 때문에 빠르고 깜빡거림이 없습니다.

2.필요한 리소스만 렌더링이 가능합니다.

서버에 최초에 한 번만 리소스를 요청한 후 받은 데이터를 전부 캐시에 저장하기 때문입니다.

3.컴포넌트별 개발이 용이합니다.

단점

1.Javascript 파일을 번들링해서 한 번에 받기 때문에 초기 구동 속도가 느립니다.

2.SEO가 상대적으로 어렵습니다.

MPA는 Multiple Page Application의 약자로, 여러 개의 페이지로 이루어진 어플리케이션입니다.

PHP나 JAVA가 여기에 속합니다.

1.새로운 페이지를 요청할 때 마다 리소스를 다운합니다. 따라서 매번 전체 페이지가 렌더링됩니다.

2.여러 개의 페이지로 구성되어 있으므로 클라이언트에서 서버에 요청을 보내면 서버에서 렌더링하고 클라이언트에 응답을 주는 방식인 SSR 환경을 사용합니다.

3.페이지를 이동하거나 새로고침할 경우 전체 페이지를 다시 렌더링합니다.

장점

1.SEO에 유리합니다.

MPA는 완성된 HTML 파일을 서버로부터 응답받기 때문에 검색엔진이 페이지를 크롤링하기 적합합니다.

2.첫 로딩이 매우 짧습니다.

서버에서 이미 렌더링을 하기 때문에 로딩은 짧지만, 클라이언트가 js 파일을 모두 다운로드하고 실행하기 까지는 각각의 기능이 동작하지 않습니다.

단점

1.새로운 페이지로 이동하면 깜빡거리기 때문에 사용자 경험에 좋지 않습니다.

2.헤더와 푸터 처럼 중복되는 내용도 다시 렌더링을 하기 때문에 성능면에서 떨어질 수 있습니다.
