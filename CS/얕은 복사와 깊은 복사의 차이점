/*자바스크립트에서 얕은 복사와 깊은 복사는 객체나 배열을 복사하는 두가지 다른 방법입니다.

이들은 복사된 객체나 배열을 수정했을 때 기존 객체나 배열에 영향을 미치는 방식에서 차이가 있습니다.

얕은 복사는 원본 객체 혹은 배열의 참조 값을 복사합니다. 따라서 복사된 객체나 배열은 원본 객체나 배열을 참조하며, 복사된 객체의 변경이 원본 객체에 영향을 미칩니다.

이는 원본 객체와 복사된 객체가 동일한 메모리 주소값을 갖고 있기 때문입니다.

ex) let arr = [1,2,3,4];

let copyArr = arr; // 얕은 복사

copyArr.push(5);

console.log(arr) // [1,2,3,4,5];

깊은 복사는 원본 객체 혹은 배열의 값 자체를 복사하여 완전히 새로운 객체나 배열을 생성합니다.

복사된 객체, 배열은 원본 객체,배열과 독립적으로 동작하며, 복사된 객체,배열의 변경이 원본 객체,배열에 영향을 미치지 않습니다.

깊은 복사를 수행하는 방법에는 다음과 같습니다.

1. 전개 연산자(Spread Operator)
2. Object.assign() 함수

위의 두 가지 방법은 중첩 객체들에 한해서 여전히 얕은 복사가 됩니다.

완벽한 깊은 복사를 위해서는 다음과 같은 방법이 있습니다.

1. JSON의 stringfy()와 parse() 함수
2. Lodash 라이브러리의 cloneDeep 함수
3. 재귀 함수를 통한 깊은 복사*/
