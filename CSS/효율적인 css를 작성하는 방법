효율적인 css를 작성하는 방법 중 하나로 선택자를 효율적으로 작성하는 방법에 대해 설명하겠습니다.

브라우저의 스타일 엔진은 4개의 카테고리로 스타일 규칙을 분류합니다.

ID 규칙, CLASS 규칙, 태그 규칙, 유니버셜 규칙

이 4개의 규칙은 스타일 규칙을 적용하는데 기본적인 역할을 합니다.

키 선택자란 선택자의 마지막 선택자를 의미합니다.

ID 규칙은 ID 선택자를 키 셀렉터로 갖고 있는 것을 의미합니다.

CLASS 규칙은 어떤 규칙의 키 선택자에 class가 명시되었으면 클래스 규칙에 속합니다.

태그 규칙은 어떤 규칙의 키 선택자에 ID와 class가 명시되지 않고 태그가 있다면 태그 규칙에 속합니다.

위의 언급한 세 개의 규칙에 속하지 않으면 유니버셜 규칙에 속합니다.

스타일 엔진은 어떻게 특정 엘리먼트에 규칙을 적용할까요?

스타일 엔진은 키 셀렉터에서 시작하여 왼쪽으로 이동하면서 엘리먼트가 규칙에 적합한지 확인합니다.

가장 기본적인 원칙은 규칙 필터링입니다.

위에서 언급한 4가지의 규칙과 일치하지 않는 규칙을 제거하기 위함입니다.

따라서 스타일 엔진은 엘리먼트와 관계없는 규칙을 매칭하는데 시간을 낭비하지 않을 수 있습니다.

또한 주어진 엘리먼트가 규칙에 적합한지 확인하는데 고려해야할 규칙의 수가 적을수록 성능이 좋아집니다.

효율적인 CSS를 작성하기 위한 몇 가지 가이드라인이 있습니다.

1. 유니버셜 규칙을 피하는 것입니다.
2. ID 규칙에 쓸모없는 태그나 클래스를 붙이지 않는 것입니다.

ID는 고유하므로 여기에 태그를 덧 붙이는 것은 매칭 속도를 저하시킵니다.

ex) button#backButton{ } (나쁨) .menu#backButton{ } (나쁨) #backbutton{ } (좋음)

1. 마찬가지로 클래스 규칙에 쓸모없는 태그를 붙이지 않는 것입니다.
2. 자손 선택자( A > B) 를 피하고 차라리 자식 선택자(A B)를 사용하는 것입니다.

자손 선택자는 css에서 가장 속도가 느린 선택자입니다.

또한 자식 선택자도 사용할 때 항상 주의해야하며, 가능한 피하는 것이 좋습니다.