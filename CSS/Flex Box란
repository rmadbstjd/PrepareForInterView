웹 페이지의 레이아웃을 잡을 때 보통 display, float, position과 같은 css 속성들을 이용하였습니다.

그런데 이러한 css 속성들로 레이아웃을 잡는게 복잡해지거나 어려운 상황이 많아져 flex가 등장하였습니다. flex는 레이아웃 배치 기능에 중점을 맞추었기 때문에 좀 더 수월하게 레이아웃을 잡을 수 있습니다.

flexbox는 부모 요소인 flex container와 자식 요소인 flex items로 구성됩니다.

1. flexbox의 방향축은 가로(row)가 메인입니다.

메인 축 방향으로 item들을 적절한 곳에 위치시키고 싶을 땐 justify-content 속성을 추가하면 됩니다.

교차 축 방향으로 item들을 위치시키고 싶을 땐 align-items 속성을 추가하면 됩니다.(단, item들의 진행 방향이 바뀌는 것이 아님)

justify-content의 속성은 다음과 같습니다.

요소들을 컨테이너의 시작점으로 정렬시키는 default 속성인 flex-start,

요소들을 컨테이너의 끝점으로 정렬시키는 flex-end,

요소들을 컨테이너의 중심으로 정렬시키는 center,

요소들을 사이에 동일한 간격을 두는 space-between,

요소들을 주위에 동일한 간격을 두는 space-around가 있습니다.

align-items의 속성은 다음과 같습니다.

요소들을 컨테이너의 꼭대기로 정렬하는 flex-start,

요소들을 컨테이너의 바닥으로 정렬하는 flex-end,

요소들을 컨테이너의 중앙으로 정렬하는 center,

요소들을 컨테이너의 시작 위치에 정렬하는 baseline,

요소들을 컨테이너에 맞도록 늘리는 stretch가 있습니다.

ex) align-items: center를 통해 교차 축 기준 가운데로 위치시킴.

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/4559bcc8-b2ae-43f5-af81-ca31f65e1f49/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/dffa6647-1b85-4371-b451-4f2d27c640ff/Untitled.png)

1. flex-direction을 통해 메인 축을 설정할 수 있습니다.

원래의 메인 축은 가로 방향이지만 flex-direction을 통해 세로 방향으로 바꿀 수 있습니다.

flex-direction의 속성은 다음과 같습니다.

메인 축을 가로 방향으로 설정하는 default 속성인 row,

메인 축을 가로방향으로 설정하지만 역방향인 row-reverse,

메인 축을 세로 방향으로 설정하는 column,

메인 축을 세로 방향으로 설정하지만 역방향인 column-reverse가 있습니다.

ex)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/f795e5a7-b065-4efc-bf63-cbd464849bce/Untitled.png)

![Untitled](https://s3-us-west-2.amazonaws.com/secure.notion-static.com/c4fc9b63-4f3b-4219-bf5e-cb93499a6d5f/Untitled.png)

1. align-self는 align-items와 비슷한 일을 하지만 개별 요소에 적용할 수 있습니다.

좀 더 쉽게 설명하자면 align-items는 교차 축에 위치한 모든 요소들을 움직이지만

align-self는 교차축에 위치한 특정 요소만을 움직일 수 있습니다.

1. order 속성은 html 코드를 변경할 필요 없이 요소들의 순서를 바꿀 수 있습니다.

1. flex-wrap을 통해 줄바꿈을 설정할 수 있습니다.

flexbox의 요소들은 무조건 같은 줄에 위치하도록 되어있습니다. 요소들이 많아져도 한 줄에 위치해야하기 때문에 요소들의 너비가 작아집니다. 이 때 flex-wrap 속성을 이용하면 요소들의 너비가 작아지지 않고 여러 줄에 걸쳐서 요소들을 배치할 수 있습니다.

1. align-content는 두 줄 이상의 요소들에게만 적용됩니다.

align-items와의 차이점은 align-items는 각 줄의 간격은 유지되면서 위치가 정렬되지만

align-content는 각 줄의 간격이 사라지고 전체 컨텐츠의 위치가 정렬됩니다.

1. 특정 요소의 크기를 바꾸고 싶을 때 flex-grow, flex-shrink를 사용할 수 있습니다.

flex-grow는 어떤 요소의 크기를 키우고 싶을 때 사용하며, 여분의 공간이 존재한다면 그 공간을 사용하여 특정 요소의 크기를 크게 만듭니다.

flex-shrink는 어떤 요소의 크기를 줄이고 싶을 때 사용합니다.
