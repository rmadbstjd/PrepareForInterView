React 컴포넌트를 만들 때 클래스형 컴포넌트, 함수형 컴포넌트의 2가지 방식이 존재합니다.

과거에는 클래스형 컴포넌트를 많이 사용했지만 리액트 훅이 도입되면서 현재는 공식 문서에서도

함수형 컴포넌트와 훅을 함께 사용할 것을 권장하고 있습니다.

함수형 컴포넌트를 선호하는 이유는

클래스형 컴포넌트는 비즈니스 로직과 내부 상태를 컴포넌트 내에서 구현하기 때문에 상대적으로 복잡한 UI 로직을 갖고있는 반면, 

함수형 컴포넌트는 내부 상태를 사용하지 않고 단순히 데이터를 받아서(Props) UI에 뿌려줍니다.

Hook을 필요한 곳에 사용하며 로직이 재사용가능하다는 점에서 장점이 있어 함수형 컴포넌트와 훅을 같이 사용하고 있습니다.

차이점으로는 다음과 같습니다.

1. 선언 방식
    
    클래스형 컴포넌트
    
    1. class 키워드가 필요합니다.
    2. Component로 상속받아야 합니다.
    3. render() 메소드가 필요합니다.
    4. state, lifeCycle 관련 기능을 사용가능합니다.
    5. 함수형보다 메모리 자원을 더 사용합니다.
    6. 임의의 메소드를 정의할 수 있습니다.
    
    함수형 컴포넌트
    
    1. state, lifeCycle 관련 기능을 사용할 수 없습니다. 이는 Hooks을 통해 해결 가능합니다(useState, useEffect)
    2. 클래스형보다 메모리 자원을 덜 소비합니다.
    3. 컴포넌트 선언이 상대적으로 편리합니다.

1. State
    
    클래스형 컴포넌트
    
    1. constructor() 안에서 this.state로 초기 값 설정이 가능합니다.
    2. this.setState()를 통해 state 값을 변경합니다.
    3. 클래스형의 state는 객체 형식입니다.
    
    함수형 컴포넌트
    
    1. useState 함수로 state를 사용합니다.
    2. useState 함수를 호출하면 배열에 반환되는데 첫 번째 원소는 현재 상태, 두 번째 원소는 상태를 바꿔주는 함수입니다.
    
2. Props
    
    클래스형 컴포넌트
    
    1. this.props로 값을 불러올 수 있습니다.
    
    함수형 컴포넌트
    
    1. props를 불러올 필요 없이 매개변수를 통해 불러올 수 있습니다.

1. 함수 선언
    
    클래스형 컴포넌트
    
    1. 함수 선언시 화살표 함수로 바로 선언이 가능합니다.
    2. 요소에 적용할 때 this.를 붙여줘야 합니다.
    
    함수형 컴포넌트
    
    1. const + 함수 형태로 선언해야합니다.
    2. 요소에 적용할 때 this가 필요없습니다.

1. Life Cycle
    
    React에서 컴포넌트는 여러 종류의 생명 주기 메소드를 가지며, 이 메소드를 오버라이딩하여 특정 시점에 코드가 실행되도록 합니다.
    
    이는 클래스형 컴포넌트에서만 해당되는 내용이며, 함수형 컴포넌트는 useEffect()를 통해 대체합니다.