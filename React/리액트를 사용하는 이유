**React의 등장 배경**

직관적인 코드 및 적은 양의 코드를 사용하여 DOM을 쉽게 제어하는 jQuery 라이브러리 등장하였고 오랜 기간 동안 웹 생태계를 지배하였습니다.

다만 시간이 지나면서 jQuery는 한계를 맞이하였습니다.

첫쨰로 순수한 javascript에 비해 로드해와야할 패키지가 많아 간단하게 코드를 작성하더라도 성능이 떨어집니다.

둘째로 인터랙티브한 웹에서는 사용자에 의한 DOM 조작이 필수적입니다. 그러나 대부분의 브라우저에서 DOM 조작이 발생할 때 마다 배치와 화면 표시에 많은 연산을 발생시키기 때문에 브라우저의 성능이 낮아집니다. 이러한 문제를 해결하기 위해 React에서는 Virtual DOM을 사용하였습니다.

**React의 장점**

1. Virtual DOM을 사용하여 연산 비용이 비교적 적게 듭니다.
2. HTML 문법과 비슷한 JSX를 사용하기 때문에 가독성이 좋습니다.
3. 컴포넌트 기반 구조이기 때문에 재사용이 가능한 컴포넌트를 개발하여 생산성이 높고 유지 보수가 좋습니다.
4. 단방향 데이터 바인딩을 사용하여 상태 관리를 쉽게 만들며, 데이터를 추적하고 관리하기가 쉬워집니다.

React의 단점

1. Angular나 Vue에 비교하면 단순한 UI 라이브러리이기 때문에 더 많은 기능을 사용하고자 하면 다른 라이브러리에 의존적입니다.

**컴포넌트 기반 구조는 무엇인가**

리액트에서 컴포넌트는 어플리케이션 UI 구축 기반입니다. 컴포넌트 기반 시스템이 구축되면, 각각의 컴포넌트들은 재사용이 가능하며 서로 독립적으로 존재합니다. 즉 컴포넌트간 의존하지 않으며 어플리케이션의 UI 개발이 용이해집니다.

**Angular, Vue와는 어떤 차이점이 있을까**

1. Angular

   구글에서 만든 타입스크립트 기반의 프레임워크입니다.

   필요한 요소들을 모두 포함하고 있어 다른 라이브러리들을 추가적으로 설치할 필요가 없는 대신 학습해야할 양이 비교적 많습니다.

   양방향 바인딩을 제공합니다.

2. Vue

   React의 장점인 Virtual Dom을 사용하며, Angular의 양방향 바인딩을 제공합니다.
