/*
**실행 컨텍스트란**

코드를 실행하는데 필요한 정보 즉, 함수, 변수, 스코프 this 등을 모아놓은 객체입니다.

**실행 컨텍스트의 원리**

자바스크립트 코드를 실행시키면 자바스크립트 엔진은 콜 스택이라는 곳에 전역 실행 컨텍스트를 담습니다.

**실행 컨텍스트의 종류**

1. 전역 실행 컨텍스트
    
    전역 코드가 실행될 때 생성되는 실행 컨텍스트입니다. 전역 변수와 전역 함수는 전역 실행 컨텍스트에 속합니다.
    
2. 함수 실행 컨텍스트
    
    함수가 호출 될 때 마다 새로운 실행 컨텍스트가 생성됩니다. 단 하나만 존재하는 전역 실행 컨텍스트와 다르게 다른 함수가 호출될 때 마다 실행 컨텍스트가 생성됩니다.
    
3. Eval 함수 실행 컨텍스트
    
    eval() 함수를 실행할 때 마다 생성되는 실행 컨텍스트입니다. 
    

**실행 컨텍스트의 구성 요소**

실행 컨텍스트는 렉시컬 환경과 변수 환경으로 구성됩니다.

*렉시컬 환경(Lexical Environment)이란* 

해당 함수의 식별자와 식별자에 바인딩된 값들을 저장한 자료구조입니다.

이를 통해 해당 함수 내부의 변수, 매개 변수, 함수 등의 정보를 관리합니다.

***변수 환경이란 (Variable Environment)이란***

스코프 체인과 this 값에 대한 정보를 저장합니다.

스코프 체인은 함수가 중첩되어 있을 때 해당 함수가 참조할 수 있는 변수들의 집합입니다.

this는 현재 실행 중인 함수가 속한 객체를 참조하는 값입니다.

변수 환경은 이러한 스코프 체인과 this 값을 관리합니다.

**콜 스택의 동작 과정**

전역에서 함수 A를 호출할 경우, 함수 A의 실행 컨텍스트를 또 콜 스택에 담습니다.

콜 스택에선 가장 최근에 추가된 실행 컨텍스트만 활성화됩니다.

만약 함수 A에서 함수 B가 호출되면 또, 함수 B의 실행 컨텍스트를 콜 스택에 담습니다.

함수 B의 실행을 마치고 함수 B의 생명 주기가 사라진다면 함수 B의 실행 컨텍스트가 사라집니다.

다시 함수 A로 돌아와 함수 A의 생명 주기가 사라진다면함수 A의 실행 컨텍스트도 사라집니다.

전역에 있는 코드가 마지막 라인까지 모두 실행되면 전역 실행 컨텍스트도 사라집니다.
*/